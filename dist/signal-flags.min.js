/** SignalFlags
 * @link https://github.com/opensums/signal-flags
 * @copyright (c) 2020 OpenSums https://opensums.com
 * @license MIT
 * @version 0.2.0-dev
 */
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e=e||self).SignalFlags={})}(this,(function(e){"use strict";var n={groups:{numerals:["n1","n2","n3","n4","n5","n6","n7","n8","n9","n0"],alphabet:["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],substitutes:["s1","s2","s3","s4"],racing:["red","yellow","blue","green","black","greenwhite","blackwhite"]},flags:{a:{name:"A",phonetic:"Alfa",shape:"swallowtail",design:[["vertical",["white","blue"]],["outline"]]},b:{name:"B",phonetic:"Bravo",shape:"swallowtail",design:[["solid","red"]]},c:{name:"C",phonetic:"Charlie",design:[["horizontal",["blue","white","red","white","blue"]],["outline"]]},d:{name:"D",phonetic:"Delta",design:[["horizontal",["yellow","blue","yellow"],[1,3,1]]]},e:{name:"E",phonetic:"Echo",design:[["horizontal",["blue","red"]]]},g:{name:"G",phonetic:"Golf",design:[["vertical",["yellow","blue","yellow","blue","yellow","blue"]]]},h:{name:"H",phonetic:"Hotel",design:[["vertical",["white","red"]],["outline"]]},j:{name:"J",phonetic:"Juliet",design:[["horizontal",["blue","white","blue"]],["outline"]]},k:{name:"K",phonetic:"Kilo",design:[["vertical",["yellow","blue"]]]},l:{name:"L",phonetic:"Lima",design:[["check",["yellow","black"]]]},m:{name:"M",phonetic:"Mike",design:[["saltire",["white","blue"]],["outline"]]},n:{name:"N",phonetic:"November",design:[["check",["blue","white"]],["outline"]]},p:{name:"P",phonetic:"Papa",design:[["border",["white","blue"]]]},q:{name:"Q",phonetic:"Quebec",design:[["solid","yellow"]]},r:{name:"R",phonetic:"Romeo",design:[["cross",["yellow","red"]]]},s:{name:"S",phonetic:"Sierra",design:[["border",["blue","white"]],["outline"]]},t:{name:"T",phonetic:"Tango",design:[["vertical",["red","white","blue"]],["outline"]]},u:{name:"U",phonetic:"Uniform",design:[["check",["red","white"]],["outline"]]},v:{name:"V",phonetic:"Victor",design:[["saltire",["red","white"]],["outline"]]},w:{name:"W",phonetic:"Whiskey",design:[["border",["red","white","blue"]]]},x:{name:"X",phonetic:"X-ray",design:[["cross",["blue","white"]],["outline"]]},black:{name:"Black",category:"racing",design:[["solid","black"]]},blackwhite:{name:"Black and white",category:"racing",design:[["check",["black","white"]]]},blue:{name:"Blue",category:"racing",design:[["solid","blue"]]},green:{name:"Green",category:"racing",design:[["solid","green"]]},greenwhite:{name:"Green and white",category:"racing",design:[["check",["green","white"]]]},red:{name:"Red",category:"racing",design:[["solid","red"]]},yellow:{name:"Yellow",category:"racing",design:[["solid","yellow"]]}},unsupportedFlags:{n9:{shape:"pennant",category:"numeral",design:[["quarters",["white","black","red","yellow"]]]}}};function s(e,n){return n&&n[e]||e}const l={default:{size:[240,180],border(e,{w:n,h:l,colors:t}){const[,o]=e,i=[],h=n/(2*o.length),r=l/(2*o.length);let a=0,u=0;for(let e=o.length-1;e>0;e--)i.push(`<path d="M${a},${u}`),i.push(`H${n-a}V${l-u}H${a}Z`),a+=h,u+=r,i.push(`M${a},${u}`),i.push(`V${l-u}H${n-a}V${u}Z"`),i.push(` fill="${s(o[e],t)}"/>\n`);return i.push(`<path d="M${a},${u}`),i.push(`H${n-a}V${l-u}H${a}Z"`),i.push(` fill="${s(o[0],t)}"/>\n`),i.join("")},check(e,{w:n,h:l,colors:t}){const[,o,i]=e,h=[];let r=i||2;const a=n/r,u=l/r;let $;r=r/2-1;let c=a,p=l-u;for(h.push(`<path d="M0,0H${c}V${l}`),$=0;$<r;$++)c+=a,h.push(`H${c}V0`),c+=a,h.push(`H${c}V${l}`);for(h.push(`H${n}V${p}H0`),$=0;$<r;$++)p-=u,h.push(`V${p}H${n}`),p-=u,h.push(`V${p}H0`);for(h.push(`V0" fill="${s(o[0],t)}"/>\n`),c=n-a,p=u,h.push(`<path d="M${n},0H${c}V${l}`),$=0;$<r;$++)c-=a,h.push(`H${c}V0`),c-=a,h.push(`H${c}V${l}`);for(h.push(`H0V${p}H${n}`),$=0;$<r;$++)p+=u,h.push(`V${p}H0`),p+=u,h.push(`V${p}H${n}`);return h.push(`V0" fill="${s(o[1],t)}"/>\n`),h.join("")},solid(e,{w:n,h:l,colors:t}){const[,o]=e;return`<path d="M0,0H${n}V${l}H0Z" fill="${s(o,t)}"/>\n`},cross(e,{w:n,h:l,colors:t}){const[,o]=e,i=[],h=l/5,r=h,a=(n-h)/2,u=(l-r)/2;return i.push('<path d="'),i.push(`M${a},0H${a+h}V${l}H${a}Z`),i.push(`M0,${u}H${n}V${u+r}H0Z`),i.push(`" fill="${s(o[0],t)}"/>\n`),i.push(' <path d="'),i.push(`M0,0H${a}V${u}H0Z`),i.push(`M${a+h},0H${n}V${u}H${a+h}Z`),i.push(`M0,${u+r}H${a}V${l}H0Z`),i.push(`M${a+h},${u+r}H${n}V${l}H${a+h}Z`),i.push(`" fill="${s(o[1],t)}"/>\n`),i.join("")},horizontal(e,{w:n,h:l,colors:t}){const[,o]=e,i=[],h=e[2];if(h){const e=l/h.reduce((e,n)=>e+n,0);for(let l=0,r=0;l<h.length;l++)i.push('<path d="M0,'+r),r+=h[l]*e,i.push(`H${n}V${r}H0Z"`),i.push(` fill="${s(o[l],t)}"/>\n`);return i.join("")}const r=l/o.length;for(let e=0;e<l;e+=r)i.push('<path d="M0,'+e),i.push(`H${n}V${e+r}H0Z"`),i.push(` fill="${s(o[e/r],t)}"/>\n`);return i.join("")},outline:(e,{w:n,h:s,colors:l})=>['<path d="M0.5,0.5',`H${n-.5}V${s-.5}H0Z"`,' stroke="black" fill="none"/>\n'].join(""),saltire(e,{w:n,h:l,colors:t}){const[,o]=e,i=[],h=n/10,r=l/10,a=n/2-h,u=l/2-r;return i.push('<path d="'),i.push(`M0,0H${h}L${n},${l-r}V${l}H${n-h}L0,${r}Z`),i.push(`M${n-h},0H${n}V${r}L${h},${l}H0V${l-r}Z`),i.push(`" fill="${s(o[0],t)}"/>\n`),i.push(' <path d="'),i.push(`M${h},0H${n-h}L${n/2},${u}Z`),i.push(`M${n},${r}V${l-r}L${n-a},${l/2}Z`),i.push(`M${h},${l}H${n-h}L${n/2},${l-u}Z`),i.push(`M0,${r}V${l-r}L${a},${l/2}Z`),i.push(`" fill="${s(o[1],t)}"/>\n`),i.join("")},vertical(e,{w:n,h:l,colors:t}){const[,o]=e,i=n/o.length,h=[];for(let e=0;e<n;e+=i)h.push(`<path d="M${e},0`),h.push(`H${e+i}V${l}H${e}Z"`),h.push(` fill="${s(o[e/i],t)}"/>\n`);return h.join("")}},swallowtail:{size:[240,180],solid(e,{w:n,h:l,colors:t}){const o=.25*n,[,i]=e;return['<path d="M0,0',`H${n}L${n-o},${l/2}L${n},${l}H0Z"`,` fill="${s(i,t)}"/>\n`].join("")},outline:(e,{w:n,h:s})=>['<path d="M0.5,0.5',`H${n-.5}L${n-.25*n-.5},${s/2}L${n-.5},${s-.5}H0Z"`,' stroke="black" fill="none"/>\n'].join(""),vertical(e,{w:n,h:l,colors:t}){const[,o]=e,i=.25*n,h=n/o.length,r=[];for(let e=0;e<n-h;e+=h)r.push(`<path d="M${e},0`),r.push(`H${e+h}V${l}H${e}Z"`),r.push(` fill="${s(o[e/h],t)}"/>\n`);return r.push(`<path d="M${n-h},0`),r.push(`H${n}L${n-i},${l/2}L${n},${l}H${n-h}Z"`),r.push(` fill="${s(o[o.length-1],t)}"/>\n`),r.join("")}}};class t{constructor(e){const s={...e};this.colors=s.colors||{},this.flags=s.flags||n,this.shapes=s.shapes||l}getFlag(e){return e?this.flags.flags[e]:this.flags.flags}getSvg(e,n){if(null==e){const e={};return Object.keys(this.flags.flags).forEach(s=>{e[s]=this.getSvg(s,n)}),e}const{design:s,shape:l}=this.flags.flags[e],{shapes:t,colors:o}=this;return function({shape:e,design:n,colors:s,outline:l,file:t}){const{size:o}=e,[i,h]=o;let r=[];t?(r.push('<?xml version="1.0" encoding="UTF-8" ?>\n'),r.push(`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 ${i} ${h}">\n`)):r.push(`<svg viewBox="0 0 ${i} ${h}">\n`);let a=!1;return n.forEach(n=>{if("outline"===n[0]){if(!1===l)return;a=!0}r.push(e[n[0]](n,{w:i,h:h,colors:s}))}),l&&!a&&r.push(e.outline([],{w:i,h:h,colors:s})),r.push("</svg>\n"),r.join("")}({shape:t[l||"default"],design:s,colors:o,...n})}}e.VERSION="0.2.0-dev",e.getFlags=function(e){return new t(e)},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=signal-flags.min.js.map
